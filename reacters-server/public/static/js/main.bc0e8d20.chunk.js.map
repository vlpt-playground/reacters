{"version":3,"sources":["lib/createPromiseThunk.js","lib/api/client.js","modules/auth.js","lib/api/auth.js","modules/user.js","lib/api/posts.js","modules/write.js","modules/posts.js","modules/index.js","containers/base/Core.js","components/base/PageTemplate.js","components/base/Responsive.js","components/base/Header.js","containers/base/HeaderContainer.js","containers/base/PageTemplateContainer.js","components/postList/WritePostButton.js","lib/common.js","components/postList/PostList.js","containers/postList/PostListContainer.js","components/postList/Pagination.js","containers/postList/PaginationContainer.js","containers/common/WithUser.js","pages/PostListPage.js","components/posts/AskRemove.js","components/posts/PostActions.js","components/posts/PostViewer.js","containers/posts/PostViewerContainer.js","pages/PostPage.js","components/auth/AuthTemplate.js","components/auth/AuthForm.js","containers/auth/LoginForm.js","pages/LoginPage.js","containers/auth/RegisterForm.js","pages/RegisterPage.js","components/write/EditorHead.js","components/write/Editor.js","containers/write/EditorContainer.js","pages/WritePage.js","App.js","serviceWorker.js","index.js"],"names":["createPromiseThunk","actionType","promiseCreator","_len","arguments","length","params","Array","_key","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","response","wrap","_context","prev","next","type","concat","apply","sent","payload","abrupt","t0","stop","_x","this","client","axios","create","setToken","token","defaults","headers","common","baseURL","changeField","createAction","mode","key","value","register","_ref2","username","password","post","login","setError","msg","initialState","passwordConfirm","error","authorization","reducer","handleActions","_handleActions","defineProperty","state","produce","draft","_ref3","_ref4","objectSpread","_ref5","data","_ref6","check","get","tempSetUser","user","user_handleActions","read","id","submitPost","title","body","getPost","postsAPI","updatePost","patch","write_handleActions","readPost","listPosts","page","undefined","removePost","delete","posts_handleActions","list","combineReducers","auth","write","posts","Core","initialize","parsedAuth","localStorage","getItem","_this","props","JSON","parse","access_token","removeItem","Component","connect","PageTemplate","children","header","react_default","createElement","className","Responsive","Header","onLogout","components_base_Responsive","Link","to","onClick","HeaderContainer","handleLogout","window","location","reload","components_base_Header","PageTemplateContainer","base_PageTemplate","base_HeaderContainer","WritePostButton","md","formatDate","date","now","Date","d","diff","getTime","distanceInWordsToNow","locale","koLocale","addSuffix","format","PostList","map","created_at","PostListContainer","loadPosts","scrollTo","prevProps","prevState","search","components_postList_PostList","query","qs","ignoreQueryPrefix","parseInt","withRouter","Pagination","_ref$page","lastPage","count","disabled","PaginationContainer","hasPosts","components_postList_Pagination","Math","ceil","PostListPage","base_PageTemplateContainer","common_WithUser","components_postList_WritePostButton","postList_PostListContainer","postList_PaginationContainer","AskRemove","onCancel","onConfirm","PostActions","onEdit","onRemove","_useState","useState","_useState2","slicedToArray","ask","setAsk","Fragment","components_posts_AskRemove","PostViewer","ownPost","components_posts_PostActions","dangerouslySetInnerHTML","__html","PostViewerContainer","_this$props","match","postId","console","log","handleEdit","_this$props2","history","push","handleRemove","_callee2","_this$props3","_context2","_this$props4","components_posts_PostViewer","PostPage","posts_PostViewerContainer","AuthTemplate","textMap","AuthForm","form","onChange","onSubmit","name","placeholder","LoginForm","handleChange","e","_e$target","target","handleSubmit","preventDefault","setItem","stringify","status","components_auth_AuthForm","LoginPage","components_auth_AuthTemplate","auth_LoginForm","RegisterForm","RegisterPage","auth_RegisterForm","EditorHead","scrolling","handleScroll","document","scrollTop","documentElement","setState","addEventListener","removeEventListener","join","Quill","require","Editor","editor","React","createRef","quill","current","theme","modules","toolbar","on","delta","oldDelta","source","selection","getSelection","index","getLength","scrollHeight","setPost","handleChangeTitle","focusEditor","focus","root","innerHTML","handleKeyPress","components_write_EditorHead","autoFocus","onKeyPress","ref","EditorContainer","handleCancel","goBack","components_write_Editor","WritePage","write_EditorContainer","App","Route","component","path","exact","base_Core","Boolean","hostname","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","es","BrowserRouter","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bc0e8d20.chunk.js","sourcesContent":["/**\n * creates thunk from promiseCreator\n * @param {string} actionType\n * @param {() => Promise<*>} promiseCreator\n */\nexport default function createPromiseThunk(actionType, promiseCreator) {\n  return (...params) => {\n    return async dispatch => {\n      // promise begins\n      dispatch({ type: `${actionType}_PENDING` });\n      try {\n        const response = await promiseCreator(...params);\n        dispatch({\n          type: `${actionType}_SUCCESS`,\n          payload: response\n        });\n        return response;\n      } catch (e) {\n        dispatch({\n          type: `${actionType}_ERROR`,\n          payload: e\n        });\n        throw e;\n      }\n    };\n  };\n}\n","import axios from 'axios';\n\nconst client = axios.create();\n\nexport const setToken = token => {\n  client.defaults.headers.common['Authorization'] = token;\n};\n\nif (process.env.NODE_ENV === 'production') {\n  client.defaults.baseURL = 'https://reacters.vlpt.us';\n}\nexport default client;\n","import { createAction, handleActions } from 'redux-actions';\nimport produce from 'immer';\nimport createPromiseThunk from '../lib/createPromiseThunk';\nimport * as authAPI from '../lib/api/auth';\n\nconst CHANGE_FIELD = 'auth/CHANGE_FIELD';\nconst INITIALIZE_FORM = 'auth/INITIALIZE_FORM';\nconst REGISTER = 'auth/REGISTER';\nconst REGISTER_SUCCESS = 'auth/REGISTER_SUCCESS';\nconst SET_ERROR = 'auth/SET_ERROR';\nconst LOGIN = 'auth/LOGIN';\nconst LOGIN_SUCCESS = 'auth/LOGIN_SUCCESS';\n\nexport const changeField = createAction(\n  CHANGE_FIELD,\n  ({ mode, key, value }) => ({ mode, key, value })\n);\nexport const initializeForm = createAction(INITIALIZE_FORM, key => key);\nexport const register = createPromiseThunk(REGISTER, authAPI.register);\nexport const login = createPromiseThunk(LOGIN, authAPI.login);\nexport const setError = createAction(SET_ERROR, msg => msg);\n\nconst initialState = {\n  register: {\n    username: '',\n    password: '',\n    passwordConfirm: ''\n  },\n  login: {\n    username: '',\n    password: ''\n  },\n  error: null,\n  authorization: null\n};\n\nconst reducer = handleActions(\n  {\n    [CHANGE_FIELD]: (state, { payload }) => {\n      const { mode, key, value } = payload;\n      return produce(state, draft => {\n        draft[mode][key] = value;\n      });\n    },\n    [INITIALIZE_FORM]: (state, { payload }) => {\n      return produce(state, draft => {\n        draft[payload] = initialState[payload];\n        draft.error = null;\n      });\n    },\n    [SET_ERROR]: (state, { payload }) => ({\n      ...state,\n      error: payload\n    }),\n    [REGISTER_SUCCESS]: (state, { payload }) => ({\n      ...state,\n      authorization: payload.data\n    }),\n    [LOGIN_SUCCESS]: (state, { payload }) => ({\n      ...state,\n      authorization: payload.data\n    })\n  },\n  initialState\n);\n\nexport default reducer;\n","import client from './client';\n\nexport const login = ({ username, password }) =>\n  client.post('/api/auth/login', { username, password });\n\nexport const register = ({ username, password }) =>\n  client.post('/api/auth/register', { username, password });\n\nexport const check = () => client.get('/api/auth/check');\n","import { createAction, handleActions } from 'redux-actions';\nimport * as authAPI from '../lib/api/auth';\nimport createPromiseThunk from '../lib/createPromiseThunk';\n\nconst CHECK = 'user/CHECK';\nconst CHECK_SUCCESS = 'user/CHECK_SUCCESS';\nconst CHECK_ERROR = 'user/CHECK_ERROR';\nconst TEMP_SET_USER = 'user/TEMP_SET_USER';\n\nexport const check = createPromiseThunk(CHECK, authAPI.check);\nexport const tempSetUser = createAction(TEMP_SET_USER, user => user);\n\nconst initialState = {\n  user: null\n};\n\nexport default handleActions(\n  {\n    [CHECK_SUCCESS]: (state, { payload }) => ({\n      ...state,\n      user: payload.data\n    }),\n    [CHECK_ERROR]: state => ({\n      ...state,\n      user: null\n    }),\n    [TEMP_SET_USER]: (state, { payload }) => ({\n      ...state,\n      user: payload\n    })\n  },\n  initialState\n);\n","import client from './client';\n\nexport const write = ({ title, body }) =>\n  client.post('/api/posts', { title, body });\n\nexport const read = id => client.get(`/api/posts/${id}`);\nexport const update = (id, { title, body }) =>\n  client.patch(`/api/posts/${id}`, { title, body });\n\nexport const listPosts = (page = 1) => client.get(`/api/posts?page=${page}`);\nexport const remove = id => client.delete(`/api/posts/${id}`);\n","import { handleActions } from 'redux-actions';\nimport createPromiseThunk from '../lib/createPromiseThunk';\nimport * as postsAPI from '../lib/api/posts';\n\nconst SUBMIT_POST = 'write/SUBMIT_POST';\nconst SUBMIT_POST_SUCCESS = 'write/SUBMIT_POST_SUCCESS';\nconst GET_POST = 'write/GET_POST';\nconst GET_POST_SUCCESS = 'write/GET_POST_SUCCESS';\nconst UPDATE_POST = 'write/UPDATE_POST';\nconst UPDATE_POST_SUCCESS = 'write/UPDATE_POST_SUCCESS';\n\nexport const submitPost = createPromiseThunk(SUBMIT_POST, postsAPI.write);\nexport const getPost = createPromiseThunk(GET_POST, postsAPI.read);\nexport const updatePost = createPromiseThunk(UPDATE_POST, postsAPI.update);\n\nconst initialState = {\n  post: null\n};\nexport default handleActions(\n  {\n    [SUBMIT_POST_SUCCESS]: (state, { payload }) => {\n      return {\n        ...state,\n        post: payload.data\n      };\n    },\n    [GET_POST_SUCCESS]: (state, { payload }) => {\n      return {\n        ...state,\n        post: payload.data\n      };\n    },\n    [UPDATE_POST_SUCCESS]: (state, { payload }) => {\n      return {\n        ...state,\n        post: payload.data\n      };\n    }\n  },\n  initialState\n);\n","import { handleActions } from 'redux-actions';\nimport createPromiseThunk from '../lib/createPromiseThunk';\nimport * as postsAPI from '../lib/api/posts';\n\nconst READ_POST = 'posts/READ_POST';\nconst READ_POST_PENDING = 'posts/READ_POST_PENDING';\nconst READ_POST_SUCCESS = 'posts/READ_POST_SUCCESS';\nconst LIST_POSTS = 'posts/LIST_POSTS';\nconst LIST_POSTS_SUCCESS = 'posts/LIST_POSTS_SUCCESS';\nconst REMOVE_POST = 'posts/REMOVE_POST';\n\nexport const readPost = createPromiseThunk(READ_POST, postsAPI.read);\nexport const listPosts = createPromiseThunk(LIST_POSTS, postsAPI.listPosts);\nexport const removePost = createPromiseThunk(REMOVE_POST, postsAPI.remove);\n\nconst initialState = {\n  post: null,\n  list: null\n};\n\nexport default handleActions(\n  {\n    [READ_POST_PENDING]: state => ({ ...state, post: null }),\n    [READ_POST_SUCCESS]: (state, { payload }) => ({\n      ...state,\n      post: payload.data\n    }),\n    [LIST_POSTS_SUCCESS]: (state, { payload }) => ({\n      ...state,\n      list: payload.data\n    })\n  },\n  initialState\n);\n","import auth from './auth';\nimport user from './user';\nimport write from './write';\nimport posts from './posts';\n\nimport { combineReducers } from 'redux';\n\nexport default combineReducers({\n  auth,\n  user,\n  write,\n  posts\n});\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { check, tempSetUser } from '../../modules/user';\nimport { setToken } from '../../lib/api/client';\n\nclass Core extends Component {\n  initialize = async () => {\n    // 로그인 설정 불러오기\n    const user = localStorage.getItem('user');\n    const authorization = localStorage.getItem('authorization');\n    if (!user) return;\n    this.props.tempSetUser(JSON.parse(user));\n    if (!authorization) return;\n    const parsedAuth = JSON.parse(authorization);\n    setToken(`Bearer ${parsedAuth.access_token}`);\n    try {\n      await this.props.check();\n    } catch (e) {\n      localStorage.removeItem('user');\n      localStorage.removeItem('authorization');\n    }\n  };\n  componentDidMount() {\n    this.initialize();\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default connect(\n  () => ({}),\n  { check, tempSetUser }\n)(Core);\n","import React from 'react';\n\nconst PageTemplate = ({ children, header }) => {\n  return (\n    <div className=\"PageTemplate\">\n      {header}\n      {children}\n    </div>\n  );\n};\n\nexport default PageTemplate;\n","import React from 'react';\nimport './Responsive.scss';\n\nconst Responsive = ({ children, className }) => {\n  return <div className={`Responsive ${className || ''}`}>{children}</div>;\n};\n\nexport default Responsive;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Header.scss';\nimport Responsive from './Responsive';\n\nconst Header = ({ user, onLogout }) => {\n  return (\n    <Responsive>\n      <div className=\"Header\">\n        <Link to=\"/\" className=\"logo\">\n          REACTERS\n        </Link>\n        <div className=\"right-area\">\n          {user ? (\n            <div className=\"logged-in\">\n              <div className=\"username\">{user.username}</div>\n              <button onClick={onLogout}>로그아웃</button>\n            </div>\n          ) : (\n            <Link to=\"/login\">로그인</Link>\n          )}\n        </div>\n      </div>\n    </Responsive>\n  );\n};\n\nexport default Header;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Header from '../../components/base/Header';\n\nclass HeaderContainer extends Component {\n  handleLogout = () => {\n    localStorage.removeItem('user');\n    localStorage.removeItem('authorization');\n    window.location.reload();\n  };\n  render() {\n    return <Header user={this.props.user} onLogout={this.handleLogout} />;\n  }\n}\n\nexport default connect(state => ({\n  user: state.user.user\n}))(HeaderContainer);\n","import React from 'react';\nimport PageTemplate from '../../components/base/PageTemplate';\nimport HeaderContainer from './HeaderContainer';\n\nconst PageTemplateContainer = ({ children }) => {\n  return <PageTemplate header={<HeaderContainer />}>{children}</PageTemplate>;\n};\n\nexport default PageTemplateContainer;\n","import React from 'react';\nimport { MdNoteAdd } from 'react-icons/md';\nimport { Link } from 'react-router-dom';\nimport './WritePostButton.scss';\n\nconst WritePostButton = () => {\n  return (\n    <Link to=\"/write\" className=\"WritePostButton\">\n      <MdNoteAdd />\n      <div className=\"text\">새 글 작성하기</div>\n    </Link>\n  );\n};\n\nexport default WritePostButton;\n","import { format, distanceInWordsToNow } from 'date-fns';\nimport koLocale from 'date-fns/locale/ko';\n\nexport function formatDate(date) {\n  const now = new Date();\n  const d = new Date(date);\n  const diff = now.getTime() - d.getTime();\n\n  if (diff < 1000 * 60) {\n    return '방금 전';\n  }\n  if (diff < 1000 * 60 * 60 * 24 * 7) {\n    return distanceInWordsToNow(d, {\n      locale: koLocale,\n      addSuffix: true\n    });\n  }\n  return format(d, 'YYYY-MM-DD');\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './PostList.scss';\nimport { formatDate } from '../../lib/common';\n\nconst PostList = ({ posts }) => {\n  return (\n    <div className=\"PostList\">\n      {posts.map(post => (\n        <div className=\"post-item\" key={post.id}>\n          <Link to={`/posts/${post.id}`} className=\"title\">\n            {post.title}\n          </Link>\n          <div className=\"meta\">\n            <span className=\"username\">\n              by <b>{post.user.username}</b>\n            </span>\n            <span className=\"separator\">&middot;</span>\n            <span className=\"date\">{formatDate(post.created_at)}</span>\n          </div>\n          <p>{post.body}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default PostList;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport qs from 'qs';\nimport { listPosts } from '../../modules/posts';\nimport PostList from '../../components/postList/PostList';\n\nclass PostListContainer extends Component {\n  get page() {\n    const query = qs.parse(this.props.location.search, {\n      ignoreQueryPrefix: true\n    });\n    return parseInt(query.page || '1', 10);\n  }\n\n  loadPosts = async () => {\n    window.scrollTo(0, 0);\n    await this.props.listPosts(this.page);\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.location.search !== this.props.location.search) {\n      this.loadPosts();\n    }\n  }\n\n  componentDidMount() {\n    this.loadPosts();\n  }\n\n  render() {\n    if (!this.props.list) return null;\n    return <PostList posts={this.props.list.posts} />;\n  }\n}\n\nexport default withRouter(\n  connect(\n    state => ({\n      list: state.posts.list\n    }),\n    {\n      listPosts\n    }\n  )(PostListContainer)\n);\n","import React from 'react';\nimport { MdChevronLeft, MdChevronRight } from 'react-icons/md';\nimport { Link } from 'react-router-dom';\nimport './Pagination.scss';\n\nconst Pagination = ({ page = 1, lastPage, count }) => {\n  return (\n    <div className=\"Pagination\">\n      {page === 1 ? (\n        <div className=\"disabled-btn\">\n          <MdChevronLeft />\n        </div>\n      ) : (\n        <Link to={`/?page=${page - 1}`} disabled={page === 1}>\n          <MdChevronLeft />\n        </Link>\n      )}\n      <div className=\"page\">\n        <b>{page}</b> 페이지\n      </div>\n      {page >= lastPage ? (\n        <div className=\"disabled-btn\">\n          <MdChevronRight />\n        </div>\n      ) : (\n        <Link to={`/?page=${page + 1}`}>\n          <MdChevronRight />\n        </Link>\n      )}\n    </div>\n  );\n};\n\nexport default Pagination;\n","import React, { Component } from 'react';\nimport Pagination from '../../components/postList/Pagination';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport qs from 'qs';\n\nclass PaginationContainer extends Component {\n  get page() {\n    const query = qs.parse(this.props.location.search, {\n      ignoreQueryPrefix: true\n    });\n    return parseInt(query.page || '1', 10);\n  }\n\n  render() {\n    if (!this.props.hasPosts) return null;\n    return <Pagination page={this.page} lastPage={this.props.lastPage} />;\n  }\n}\n\nexport default withRouter(\n  connect(state => ({\n    hasPosts: !!state.posts.list,\n    lastPage: state.posts.list ? Math.ceil(state.posts.list.count / 10) : 1\n  }))(PaginationContainer)\n);\n","// Render Props 를 사용하여 원하는 곳에서 쉽게 유저 조회하는 예제\n// PostListPage 에서 사용중\n\nimport { connect } from 'react-redux';\nconst WithUser = ({ children, user }) => {\n  return children(user);\n};\n\nexport default connect(state => ({\n  user: state.user.user\n}))(WithUser);\n","import React from 'react';\nimport './PostListPage.scss';\nimport PageTemplateContainer from '../containers/base/PageTemplateContainer';\nimport WritePostButton from '../components/postList/WritePostButton';\nimport Responsive from '../components/base/Responsive';\nimport PostListContainer from '../containers/postList/PostListContainer';\n\nimport PaginationContainer from '../containers/postList/PaginationContainer';\nimport WithUser from '../containers/common/WithUser';\n\nconst PostListPage = () => {\n  return (\n    <PageTemplateContainer>\n      <Responsive>\n        <div className=\"PostListPage\">\n          <WithUser>\n            {user => {\n              if (!user) return null;\n              return (\n                <div className=\"button-aligner\">\n                  <WritePostButton />\n                </div>\n              );\n            }}\n          </WithUser>\n\n          <PostListContainer />\n          <PaginationContainer />\n        </div>\n      </Responsive>\n    </PageTemplateContainer>\n  );\n};\n\nexport default PostListPage;\n","import React from 'react';\nimport './AskRemove.scss';\n\nconst AskRemove = ({ onCancel, onConfirm }) => {\n  return (\n    <div className=\"AskRemove\">\n      <div className=\"box\">\n        <div className=\"message\">정말 삭제하시겠습니까?</div>\n        <div className=\"buttons\">\n          <button className=\"cancel\" onClick={onCancel}>\n            취소\n          </button>\n          <button className=\"confirm\" onClick={onConfirm}>\n            확인\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AskRemove;\n","import React, { useState } from 'react';\nimport './PostActions.scss';\nimport AskRemove from './AskRemove';\n\nconst PostActions = ({ onEdit, onRemove }) => {\n  const [ask, setAsk] = useState(false);\n  const onRemoveClick = () => {\n    setAsk(true);\n  };\n  const onCancel = () => {\n    setAsk(false);\n  };\n  const onConfirm = async () => {\n    onRemove();\n  };\n  return (\n    <>\n      <div className=\"PostActions\">\n        <div className=\"buttons\">\n          <button onClick={onEdit}>수정</button>\n          <button onClick={onRemoveClick}>삭제</button>\n        </div>\n      </div>\n      {ask && <AskRemove onConfirm={onConfirm} onCancel={onCancel} />}\n    </>\n  );\n};\n\nexport default PostActions;\n","import React from 'react';\n\nimport './PostViewer.scss';\nimport { formatDate } from '../../lib/common';\nimport PostActions from './PostActions';\n\nconst PostViewer = ({\n  title,\n  body,\n  username,\n  date,\n  ownPost,\n  onEdit,\n  onRemove\n}) => {\n  return (\n    <div className=\"PostViewer\">\n      {ownPost && <PostActions onEdit={onEdit} onRemove={onRemove} />}\n      <h1 className=\"title\">{title}</h1>\n      <div className=\"meta\">\n        <span className=\"username\">\n          by <b>{username}</b>\n        </span>\n        <span className=\"separator\">&middot;</span>\n        <span className=\"date\">{formatDate(date)}</span>\n      </div>\n      <div\n        className=\"body\"\n        dangerouslySetInnerHTML={{\n          __html: body\n        }}\n      />\n    </div>\n  );\n};\n\nexport default PostViewer;\n","import React, { Component } from 'react';\nimport PostViewer from '../../components/posts/PostViewer';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { readPost, removePost } from '../../modules/posts';\n\nclass PostViewerContainer extends Component {\n  initialize = async () => {\n    const { match, readPost } = this.props;\n    const { postId } = match.params;\n    try {\n      await readPost(postId);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  componentDidMount() {\n    this.initialize();\n  }\n\n  handleEdit = () => {\n    const { post, history } = this.props;\n    history.push(`/write?id=${post.id}`);\n  };\n\n  handleRemove = async () => {\n    const { post, history, removePost } = this.props;\n    try {\n      await removePost(post.id);\n      history.push('/');\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  render() {\n    const { post, user } = this.props;\n    if (!post) return null;\n    return (\n      <PostViewer\n        title={post.title}\n        body={post.body}\n        date={post.created_at}\n        username={post.user.username}\n        ownPost={post.user.username === (user && user.username)}\n        onEdit={this.handleEdit}\n        onRemove={this.handleRemove}\n      />\n    );\n  }\n}\n\nexport default withRouter(\n  connect(\n    state => ({\n      post: state.posts.post,\n      user: state.user.user\n    }),\n    {\n      readPost,\n      removePost\n    }\n  )(PostViewerContainer)\n);\n","import React from 'react';\nimport './PostPage.scss';\nimport PageTemplateContainer from '../containers/base/PageTemplateContainer';\nimport Responsive from '../components/base/Responsive';\nimport PostViewerContainer from '../containers/posts/PostViewerContainer';\n\nconst PostPage = () => {\n  return (\n    <PageTemplateContainer>\n      <div className=\"PostPage\">\n        <Responsive>\n          <PostViewerContainer />\n        </Responsive>\n      </div>\n    </PageTemplateContainer>\n  );\n};\n\nexport default PostPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './AuthTemplate.scss';\n\nconst AuthTemplate = ({ children }) => {\n  return (\n    <div className=\"AuthTemplate\">\n      <div className=\"whitebox\">\n        <div className=\"logo-area\">\n          <Link to=\"/\" className=\"logo\">\n            REACTERS\n          </Link>\n        </div>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default AuthTemplate;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './AuthForm.scss';\n\nconst textMap = {\n  login: '로그인',\n  register: '회원가입'\n};\n\nconst AuthForm = ({ type, form, error, onChange, onSubmit }) => {\n  const { username, password, passwordConfirm } = form || {}; // form 이 없을 때 크래시 방지\n  return (\n    <div className=\"AuthForm\">\n      <h3>{textMap[type]}</h3>\n      <form onSubmit={onSubmit}>\n        <input\n          name=\"username\"\n          placeholder=\"아이디\"\n          onChange={onChange}\n          value={username}\n        />\n        <input\n          name=\"password\"\n          placeholder=\"비밀번호\"\n          onChange={onChange}\n          value={password}\n          type=\"password\"\n        />\n        {type === 'register' && (\n          <input\n            name=\"passwordConfirm\"\n            placeholder=\"비밀번호 확인\"\n            onChange={onChange}\n            value={passwordConfirm}\n            type=\"password\"\n          />\n        )}\n        {error && <div className=\"error\">{error}</div>}\n        <button type=\"submit\">{textMap[type]}</button>\n      </form>\n      <div className=\"footer\">\n        {type === 'login' ? (\n          <Link to=\"/register\">회원가입</Link>\n        ) : (\n          <Link to=\"/login\">로그인</Link>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AuthForm;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport AuthForm from '../../components/auth/AuthForm';\nimport { connect } from 'react-redux';\nimport { changeField, setError, login } from '../../modules/auth';\nimport { setToken } from '../../lib/api/client';\nimport { check } from '../../modules/user';\n\nclass LoginForm extends Component {\n  handleChange = e => {\n    const { value, name } = e.target;\n    this.props.changeField({\n      mode: 'login',\n      key: name,\n      value\n    });\n  };\n  handleSubmit = async e => {\n    e.preventDefault();\n    const { form, login, setError, check } = this.props;\n    const { username, password } = form;\n    setError(null);\n    try {\n      await login({\n        username,\n        password\n      });\n      const { authorization } = this.props;\n      localStorage.setItem('authorization', JSON.stringify(authorization));\n      setToken(`Bearer ${authorization.access_token}`);\n      await check();\n      const { user, history } = this.props;\n      localStorage.setItem('user', JSON.stringify(user));\n      history.push('/');\n    } catch (e) {\n      if (!e.response) {\n        setError('오류 발생!');\n        console.log(e);\n      }\n      if (e.response.status === 401) {\n        setError('로그인 실패');\n      }\n    }\n  };\n  render() {\n    const { form, error } = this.props;\n    return (\n      <AuthForm\n        type=\"login\"\n        form={form}\n        onChange={this.handleChange}\n        onSubmit={this.handleSubmit}\n        error={error}\n      />\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    form: state.auth.login,\n    error: state.auth.error,\n    authorization: state.auth.authorization,\n    user: state.user.user\n  }),\n  {\n    changeField,\n    setError,\n    login,\n    check\n  }\n)(withRouter(LoginForm));\n","import React from 'react';\nimport AuthTemplate from '../components/auth/AuthTemplate';\nimport LoginForm from '../containers/auth/LoginForm';\n\nconst LoginPage = () => {\n  return (\n    <AuthTemplate>\n      <LoginForm />\n    </AuthTemplate>\n  );\n};\n\nexport default LoginPage;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport AuthForm from '../../components/auth/AuthForm';\nimport { connect } from 'react-redux';\nimport { changeField, setError, register } from '../../modules/auth';\nimport { setToken } from '../../lib/api/client';\nimport { check } from '../../modules/user';\n\nclass RegisterForm extends Component {\n  handleChange = e => {\n    const { value, name } = e.target;\n    this.props.changeField({\n      mode: 'register',\n      key: name,\n      value\n    });\n  };\n  handleSubmit = async e => {\n    e.preventDefault();\n    const { form, register, setError, check } = this.props;\n    const { username, password, passwordConfirm } = form;\n    setError(null);\n    if (password !== passwordConfirm) {\n      setError('비밀번호가 일치하지 않습니다.');\n    }\n    try {\n      await register({\n        username,\n        password\n      });\n      const { authorization } = this.props;\n      localStorage.setItem('authorization', JSON.stringify(authorization));\n      setToken(`Bearer ${authorization.access_token}`);\n      await check();\n      const { user, history } = this.props;\n      localStorage.setItem('user', JSON.stringify(user));\n      history.push('/');\n    } catch (e) {\n      if (!e.response) {\n        setError('오류 발생!');\n      }\n      if (e.response.status === 409) {\n        setError('이미 존재하는 아이디입니다.');\n      }\n    }\n  };\n  render() {\n    const { form, error } = this.props;\n    return (\n      <AuthForm\n        type=\"register\"\n        form={form}\n        onChange={this.handleChange}\n        onSubmit={this.handleSubmit}\n        error={error}\n      />\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    form: state.auth.register,\n    error: state.auth.error,\n    authorization: state.auth.authorization,\n    user: state.user.user\n  }),\n  {\n    changeField,\n    setError,\n    register,\n    check\n  }\n)(withRouter(RegisterForm));\n","import React from 'react';\nimport AuthTemplate from '../components/auth/AuthTemplate';\nimport RegisterForm from '../containers/auth/RegisterForm';\n\nconst RegisterPage = () => {\n  return (\n    <AuthTemplate>\n      <RegisterForm />\n    </AuthTemplate>\n  );\n};\n\nexport default RegisterPage;\n","import React, { Component } from 'react';\nimport './EditorHead.scss';\nimport Responsive from '../base/Responsive';\nclass EditorHead extends Component {\n  state = {\n    scrolling: false\n  };\n  handleScroll = () => {\n    const scrollTop =\n      document.body.scrollTop || document.documentElement.scrollTop;\n    const scrolling = scrollTop > 0;\n    if (this.state.scrolling === scrolling) return;\n    this.setState({\n      scrolling\n    });\n  };\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  render() {\n    const { onSubmit, onCancel } = this.props;\n    return (\n      <>\n        <div\n          className={[\n            'EditorHead',\n            this.state.scrolling ? 'scrolling' : ''\n          ].join(' ')}\n        >\n          <Responsive className=\"wrapper\">\n            <button className=\"cancel\" onClick={onCancel}>\n              취소\n            </button>\n            <button className=\"submit\" onClick={onSubmit}>\n              작성하기\n            </button>\n          </Responsive>\n        </div>\n        <div className=\"padding\" />\n      </>\n    );\n  }\n}\n\nexport default EditorHead;\n","import React, { Component } from 'react';\nimport 'quill/dist/quill.bubble.css';\nimport './Editor.scss';\nimport EditorHead from './EditorHead';\n\nlet Quill = null;\nif (process.env.APP_ENV === 'browser') {\n  Quill = require('quill');\n}\n\nclass Editor extends Component {\n  editor = React.createRef();\n  quill = null;\n  state = {\n    title: ''\n  };\n\n  initialize = () => {\n    const quill = new Quill(this.editor.current, {\n      theme: 'bubble',\n      placeholder: '내용을 작성하세요.',\n      modules: {\n        toolbar: [\n          ['bold', 'italic'],\n          [{ header: '1' }, { header: '2' }],\n          ['blockquote', 'code-block', 'link', 'image']\n        ]\n      }\n    });\n    quill.on('text-change', (delta, oldDelta, source) => {\n      const selection = quill.getSelection();\n      if (!selection) return;\n      if (selection.index === quill.getLength() - 1) {\n        window.scrollTo(0, document.body.scrollHeight);\n      }\n    });\n    this.quill = quill;\n\n    this.setPost();\n  };\n\n  handleChangeTitle = e => {\n    this.setState({\n      title: e.target.value\n    });\n  };\n\n  focusEditor = () => {\n    this.quill.focus();\n  };\n\n  setPost = () => {\n    const { post } = this.props;\n    if (!post) return;\n    this.setState({\n      title: post.title\n    });\n    this.quill.root.innerHTML = post.body;\n  };\n  handleSubmit = () => {\n    this.props.onSubmit({\n      title: this.state.title,\n      body: this.quill.root.innerHTML\n    });\n  };\n  componentDidMount() {\n    this.initialize();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.post !== this.props.post) {\n      // post 가 바뀔 경우 에디터 초기 상태 재설정\n      this.setPost();\n    }\n  }\n\n  handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      this.focusEditor();\n    }\n  };\n\n  render() {\n    const { title } = this.state;\n    return (\n      <div className=\"Editor\">\n        <EditorHead\n          onSubmit={this.handleSubmit}\n          onCancel={this.props.onCancel}\n        />\n        <input\n          placeholder=\"제목을 입력하세요.\"\n          className=\"title\"\n          value={title}\n          onChange={this.handleChangeTitle}\n          autoFocus\n          onKeyPress={this.handleKeyPress}\n        />\n        <div\n          className=\"quill-editor\"\n          ref={this.editor}\n          onClick={this.focusEditor}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Editor;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Editor from '../../components/write/Editor';\nimport { submitPost, getPost, updatePost } from '../../modules/write';\nimport { withRouter } from 'react-router-dom';\nimport qs from 'qs';\n\nclass EditorContainer extends Component {\n  get id() {\n    const { location } = this.props;\n    const query = qs.parse(location.search, {\n      ignoreQueryPrefix: true\n    });\n    return query.id;\n  }\n  initialize = async () => {\n    // 수정 할 id 가 있으면 포스트를 불러옴\n    const id = this.id;\n    if (id) {\n      await this.props.getPost(id);\n    }\n  };\n\n  componentDidMount() {\n    this.initialize();\n  }\n\n  handleCancel = () => {\n    this.props.history.goBack();\n  };\n  handleSubmit = async ({ title, body }) => {\n    try {\n      if (this.id) {\n        await this.props.updatePost(this.id, {\n          title,\n          body\n        });\n      } else {\n        await this.props.submitPost({\n          title,\n          body\n        });\n      }\n      const { post } = this.props;\n      this.props.history.push(`/posts/${post.id}`);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  render() {\n    const { post } = this.props;\n    if (this.id && !post) return null; // id 파라미터 있는데 포스트 아직 안불러왔으면 아무것도 렌더링하지 않음\n    return (\n      <Editor\n        onSubmit={this.handleSubmit}\n        onCancel={this.handleCancel}\n        post={this.id && post}\n      />\n    );\n  }\n}\n\nexport default withRouter(\n  connect(\n    state => ({\n      post: state.write.post\n    }),\n    {\n      submitPost,\n      getPost,\n      updatePost\n    }\n  )(EditorContainer)\n);\n","import React from 'react';\nimport './WritePage.scss';\nimport Responsive from '../components/base/Responsive';\nimport EditorContainer from '../containers/write/EditorContainer';\n\nconst WritePage = () => {\n  return (\n    <div className=\"WritePage\">\n      <Responsive>\n        <EditorContainer />\n      </Responsive>\n    </div>\n  );\n};\n\nexport default WritePage;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport Core from './containers/base/Core';\nimport PostListPage from './pages/PostListPage';\nimport PostPage from './pages/PostPage';\nimport LoginPage from './pages/LoginPage';\nimport RegisterPage from './pages/RegisterPage';\nimport WritePage from './pages/WritePage';\n\nconst App = () => {\n  return (\n    <>\n      <Route component={PostListPage} path=\"/\" exact />\n      <Route component={LoginPage} path=\"/login\" />\n      <Route component={RegisterPage} path=\"/register\" />\n      <Route component={WritePage} path=\"/write\" />\n      <Route component={PostPage} path=\"/posts/:postId(\\d+)\" />\n      <Core />\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './modules';\nimport './styles/main.scss';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}